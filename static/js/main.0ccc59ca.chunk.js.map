{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","viewport","activeSkillChoice","activeProject","activeProjectsIndex","activeProjectImage","skillChoices","title","value","frameworks","projects","images","state","setState","className","onClick","length","size","map","skill","index","key","framework","undefined","firstProjectValue","console","log","Fragment","src","skillProjectsLength","lastProjectValue","lastImageInProject","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0ccc59ca.chunk.js","sourcesContent":["import React, {useState} from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport './circle.css';\nimport './App.css';\nimport {BsArrowUpShort, BsArrowDownShort, BsArrow90DegRight, BsArrowLeftShort, BsArrowRightShort} from 'react-icons/bs'\n// import nightlight from './images/nightlights.jpg'\n\nfunction App() {\n  const [state, setState] = useState({\n    viewport: 'home',\n    activeSkillChoice:0,\n    activeProject:0,\n    activeProjectsIndex:0,\n    activeProjectImage:0,\n    skillChoices: [\n      {\n        title: \"HTML\",\n        value: 100,\n        frameworks: [],\n        projects: [0,1,2,3,4]\n      },\n      {\n        title: \"CSS3\",\n        value: 100,\n        frameworks: [\n          {\n            title: \"Bootstrap\",\n            value: 100\n          },\n          {\n            title: \"Materialize\",\n            value: 100\n          }\n        ],\n        projects: [0,1,2,3,4]\n      },\n      {\n        title: \"Javascript\",\n        value: 99,\n        frameworks: [\n          {\n            title: \"React.js\",\n            value: 95,\n          },\n          {\n            title: \"Angular\",\n            value: 80\n          },\n          {\n            title: \"Vue.js\",\n            value: 90\n          },\n          {\n            title: \"Node.js\",\n            value: 90\n          }\n        ],\n        projects: [0,4]\n      },\n      {\n        title: \"PHP\",\n        value: 99,\n        frameworks: [\n          {\n            title: \"Laravel/Lumen\",\n            value: 99,\n          },\n          {\n            title: \"Zend\",\n            value: 70,\n          },\n          {\n            title: \"Symfony\",\n            value: 70\n          },\n          {\n            title: \"Wordpress\",\n            value: 90\n          }\n        ],\n        projects:[1]\n      },\n      {\n        title: \"Mobile Dev\",\n        value: 90,\n        frameworks: [\n          {\n            title: \"React Native\",\n            value: 90\n          }\n        ],\n        projects: [2,3]\n      },\n      {\n        title: \"Coldfusion\",\n        value: 95,\n        frameworks: [\n          {\n            title: \"Lucee\",\n            value: 99\n          }\n        ],\n        projects:[]\n      },\n      {\n        title: \"Database\",\n        value: 95,\n        frameworks: [\n          {\n            title: \"MYSQL\",\n            value: 99\n          },\n          {\n            title: \"SQLite\",\n            value: 95\n          },\n          {\n            title: \"MongoDB\",\n            value: 80\n          }\n        ],\n        projects:[]\n      },\n      {\n        title: \"Unity\",\n        value: 95,\n        frameworks: [\n          {\n            title: \"C#\",\n            value: 95\n          }\n        ],\n        projects:[5]\n      }\n    ],\n    projects: [\n      {\n        title: \"Onboarding Survey\",\n        images: [\n          \"images/projects/OnboardingSurvey.png\",\n          \"images/projects/OnboardingSurvey1.png\",\n          \"images/projects/OnboardingSurvey2.png\"\n        ]\n      },\n      {\n        title: \"In-house Ticket System\",\n        images: [\n          \"images/projects/ticketLightMode.jpg\",\n          \"images/projects/ticketDarkMode.jpg\"\n        ]\n      },\n      {\n        title: \"Fitness Partner\",\n        images: [\n          \"images/projects/reactnative2.png\",\n        ]\n      },\n      {\n        title: \"Cash Flow\",\n        images: [\n          \"images/projects/reactnative.png\"\n        ]\n      },\n      {\n        title: \"Messaging Application\",\n        images: [\n          \"images/projects/vueSample.png\",\n        ]\n      },\n      {\n        title: \"HyperHole\",\n        images: [\n          \"images/projects/HyperHole1.png\",\n          \"images/projects/HyperHole2.png\"\n        ]\n      }\n    ]\n  })\n  let content;\n\n  const renderSkillChoices = () => {\n    return state.skillChoices.map( (skill,index) => {\n      let isSelected = index === state.activeSkillChoice;\n      if(isSelected){\n        return (\n          <div key={index} className=\"skill-choice\">{skill.title}</div>\n        )\n      }else{\n        return null;\n      }\n    })\n  }\n\n  const navNextSkill = () => {\n    setState({\n      ...state,\n      activeSkillChoice: state.activeSkillChoice+1 <= (state.skillChoices.length-1) ? (state.activeSkillChoice+=1) : 0,\n      activeProject: state.skillChoices[state.activeSkillChoice].projects[0],\n      activeProjectsIndex: 0,\n      activeProjectImage:0\n    })\n  }\n\n  const navPrevSkill = () => {\n    setState({\n      ...state,\n      activeSkillChoice: state.activeSkillChoice-1 >= 0 ? state.activeSkillChoice-=1 : (state.skillChoices.length - 1),\n      activeProject: state.skillChoices[state.activeSkillChoice].projects[0],\n      activeProjectsIndex: 0,\n      activeProjectImage:0\n    })\n  }\n\n  const renderSkillChoiceDetails = () => {\n    return state.skillChoices[state.activeSkillChoice].frameworks.map( (framework, index) => {\n      return (\n        <div key={index} className=\"framework\">\n          <div className=\"title center\">{framework.title}</div>\n          <div className=\"value\">\n            <div className={\"c100 p\"+framework.value+\" small blue\"}>\n              <span>{framework.value}%</span>\n              <div className=\"slice\">\n                <div className=\"bar\"></div>\n                <div className=\"fill\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    });\n\n  }\n\n  const renderProjects = () => {\n    return (\n      <React.Fragment>\n        <div className=\"project-title\">{state.projects[state.activeProject].title}</div>\n        <div className=\"project-img\"><img src={state.projects[state.activeProject].images[state.activeProjectImage]}/></div>\n      </React.Fragment>\n    )\n  }\n\n  const navNextProject = () => {\n    //last project\n    let skillProjectsLength = state.skillChoices[state.activeSkillChoice].projects.length - 1;\n    let lastProjectValue = state.skillChoices[state.activeSkillChoice].projects[skillProjectsLength];\n    let lastImageInProject = (state.projects[state.activeProject].images.length - 1);\n    //check if has next project image, change to it otherwise change project if has other/\n    if(state.activeProjectImage < lastImageInProject){\n      setState({\n        ...state, \n        activeProjectImage: state.activeProjectImage+=1\n      });\n    }else if(state.activeProjectImage == lastImageInProject){\n      //if has another list of project images.\n      if(state.activeProject != lastProjectValue){\n        setState({\n          ...state,\n          activeProjectsIndex:state.activeProjectsIndex+=1,\n          activeProject: state.skillChoices[state.activeSkillChoice].projects[state.activeProjectsIndex],\n          activeProjectImage:0\n        });\n      }\n    }\n  }\n\n  const navPrevProject = () => {\n    // let skillProjectsLength = state.skillChoices[state.activeSkillChoice].projects.length - 1;\n    let firstProjectValue = state.skillChoices[state.activeSkillChoice].projects[0];\n    let lastImageInProject = (state.projects[state.activeProject].images.length - 1);\n    // let firstImageInProject = state.skillChoices[state.activeProject].projectsimages[0];\n    //if currentProjectImage > \n    if(state.activeProjectImage > 0){\n      setState({\n        ...state,\n        activeProjectImage: state.activeProjectImage-=1\n      });\n    }else if(state.activeProjectImage == 0){\n      if(state.activeProject != firstProjectValue){\n        console.log('changing project', state);\n        console.log(state.projects[state.activeProject].images.length);\n        setState({\n          ...state,\n          activeProjectsIndex:state.activeProjectsIndex-=1,\n          activeProject: state.skillChoices[state.activeSkillChoice].projects[state.activeProjectsIndex],\n          activeProjectImage: state.projects[state.skillChoices[state.activeSkillChoice].projects[state.activeProjectsIndex]].images.length - 1\n        });\n      }\n    }\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className=\"bg-img\"></div>\n      <div className=\"default-content\">\n        \n        <div className=\"header-content\">\n          \n          <div className=\"name center\">\n           \n            <div className=\"first-name\">Mohammed</div>\n           \n            <div className=\"second-name\">Hammed's</div>\n          \n          </div>\n          \n          <div className=\"skill-choice-wrapper\">\n            <div className=\"nav-up center\">{<BsArrowUpShort onClick={navPrevSkill} size={50}/>}</div>\n              <div className=\"skill-choices\">{renderSkillChoices()}</div>\n            <div className=\"nav-down center\">{<BsArrowDownShort onClick={navNextSkill} size={50}/>}</div>\n          </div>\n\n          <div className=\"word-wrapper\"> Skills</div>\n        </div>\n\n        <div className=\"skill-display\">\n          \n          <div className=\"display-title\">\n\n            <div className=\"display-name\">\n              {state.skillChoices[state.activeSkillChoice].title} Tools\n              <div className=\"display-arrow\">\n                <BsArrow90DegRight size={50}/>\n              </div>\n            </div>\n          \n            <div className=\"display-value\">\n              <div className={\"c100 p\"+state.skillChoices[state.activeSkillChoice].value+\" small green\"}>\n                <span>{state.skillChoices[state.activeSkillChoice].value}%</span>\n                <div className=\"slice\">\n                  <div className=\"bar\"></div>\n                  <div className=\"fill\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n            {\n              state.skillChoices[state.activeSkillChoice].frameworks.length > 0 ? \n                (<div className=\"display-content\">\n                  {renderSkillChoiceDetails()}\n                </div>)\n              :\n                (<div className=\"spacefiller\">Nothing to show here.</div>)\n            }    \n        </div>\n\n        <div className=\"projects-container\">\n          <div className=\"display-title\">\n            <div className=\"project-header\">\n              {state.skillChoices[state.activeSkillChoice].title} Projects\n              <div className=\"display-arrow\">\n                <BsArrow90DegRight size={50}/>\n              </div>\n            </div>\n          </div>\n          {state.activeProject != undefined ? \n          (<div className=\"display-content\">\n            <div className=\"navPrevProject\"><BsArrowLeftShort onClick={navPrevProject} size={50}/></div>\n              <div className=\"project-container\">\n                {renderProjects()}\n              </div>\n            \n            <div className=\"navNextProject\"><BsArrowRightShort onClick={navNextProject} size={50}/></div>\n          </div>)\n          : (<div className=\"spacefiller\">Nothing to show here.</div>)\n          }\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}